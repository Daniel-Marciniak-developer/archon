services:
  
  postgres:
    image: postgres:15
    container_name: archon-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-archon_dev}
      POSTGRES_USER: ${POSTGRES_USER:-archon_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-archon_password}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - archon-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-archon_user} -d ${POSTGRES_DB:-archon_dev}"]
      interval: 10s
      timeout: 5s
      retries: 5

  
  redis:
    image: redis:7-alpine
    container_name: archon-redis
    ports:
      - "6379:6379"
    networks:
      - archon-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: archon-backend
    env_file:
      - ./backend/.env
    environment:
      - DATABASE_URL_DEV=postgresql://${POSTGRES_USER:-archon_user}:${POSTGRES_PASSWORD:-archon_password}@postgres:5432/${POSTGRES_DB:-archon_dev}
      - DATABASE_URL_ADMIN_DEV=postgresql://${POSTGRES_USER:-archon_user}:${POSTGRES_PASSWORD:-archon_password}@postgres:5432/${POSTGRES_DB:-archon_dev}
      - ARCHON_SERVICE_TYPE=development
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - PROMETHEUS_MULTIPROC_DIR=/tmp
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - /app/__pycache__
      - analysis_reports:/app/analysis_reports
    networks:
      - archon-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  
  celery-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: archon-celery-worker
    env_file:
      - ./backend/.env
    environment:
      - DATABASE_URL_DEV=postgresql://${POSTGRES_USER:-archon_user}:${POSTGRES_PASSWORD:-archon_password}@postgres:5432/${POSTGRES_DB:-archon_dev}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - ARCHON_SERVICE_TYPE=development
    volumes:
      - ./backend:/app
      - analysis_reports:/app/analysis_reports
      - model_cache:/app/model_cache
    networks:
      - archon-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    command: celery -A app.jobs.celery worker --loglevel=info

  
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: archon-prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    networks:
      - archon-network
    restart: unless-stopped


  
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: archon-frontend
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:8000
      - VITE_WS_API_URL=ws://localhost:8000
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - archon-network
    depends_on:
      - backend
    restart: unless-stopped
    command: npm run dev -- --host 0.0.0.0

volumes:
  
  postgres_data:
    driver: local
  
  prometheus_data:
    driver: local
  
  analysis_reports:
    driver: local
  
  model_cache:
    driver: local

networks:
  archon-network:
    driver: bridge
